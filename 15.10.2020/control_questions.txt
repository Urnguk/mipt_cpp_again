Конструктор по умолчанию, пользовательские конструкторы, деструктор, пермещающий и копирующий опреаторы присваивания, перемещающий и копирующий констукторы.
При перегрузке важно помнить, что перегрузить можно только уже существующие операторы, при этом их тип(унарный, бинарный, тернарный) должен быть сохранен. Перегружать можно, например, операторы "++" "--" "[]". Не рекоммендуется: "," "&". Нельзя: "." ".*" "::".
На вход оператору необходимо отдавать указатель или ссылку на пользовательский класс, во избежание создания копий и последующей утечки памяти. Помимо этого стоит проектировать их с учетом неявного пользовательского преобразования(должен существовать не explicit конструктор), то есть без нужды не перегружать один оператор сликшмо много раз.
Перемещаемые - rvalue, идентифицируемые - gvalue. Их подмножества: не идентифицируемое, но перемещаемое - prvalue; идентфицируемое и перемещаемое - xvalue; идентифицируемое, но не перемещаемое - lvalue.
rvalue ссылки могут принимать не только lvalue но и rvalue значения, соответственно работа с такими ссылками не только потенциально ускоряет выполнение кода в случае стандартного алгоритма(см. следующий пункт), но и позволяет использовать изначально временные объекты, которыми мы не могли работать раньше(через lvalue ссылки).
Семантика перемещения подразумевает передачу владения данными от одного объекта к другому. При этом не возникают лишние копии объектов, а также не запускаютс ненужные нам конструкторы и деструкторы, как в случае семантики копирования. Все это приводит к меньшему числу операций, и, как следствие, повышенной производительности.
std::move() - принимает lvalue значение и возвращает rvalue(если точнее, то xvalue, так как имя сохраняется, а значит выражение идентфицируемо). Нет смысла явно ее вызывать, если мы уже работаем с выражением вида rvalue.
Конструктором по перемещению и перемещающим оператором присваивания.
В случае, если стандартный вид копирующего конструктора или оператора присваивания копированием нас не устраивает(копирование должно быть более глубоким, как в случае, например, вложенных массивов). А также в случае необходимости создания перемещающего конструктора или оператора присваивания перемещением, так как они по-умолчанию не создаются.
default позволяет испльзовать специальную функцию-член по умолчанию. delete - удаляет ее, чтобы никто не мог ею воспользоваться.
